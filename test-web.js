const { spawn } = require('child_process');
const http = require('http');

console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–µ–±-–≤–µ—Ä—Å–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...\n');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞
function checkServer(port, timeout = 30000) {
  return new Promise((resolve, reject) => {
    const startTime = Date.now();
    
    function tryConnect() {
      if (Date.now() - startTime > timeout) {
        reject(new Error(`Timeout: —Å–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç —á–µ—Ä–µ–∑ ${timeout/1000} —Å–µ–∫—É–Ω–¥`));
        return;
      }
      
      const req = http.get(`http://localhost:${port}`, (res) => {
        resolve({
          status: res.statusCode,
          headers: res.headers
        });
      });
      
      req.on('error', () => {
        // –ü–æ–ø—Ä–æ–±—É–µ–º –µ—â–µ —Ä–∞–∑ —á–µ—Ä–µ–∑ 1 —Å–µ–∫—É–Ω–¥—É
        setTimeout(tryConnect, 1000);
      });
      
      req.setTimeout(2000, () => {
        req.destroy();
        setTimeout(tryConnect, 1000);
      });
    }
    
    tryConnect();
  });
}

// –ó–∞–ø—É—Å–∫ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞
async function testWebServer() {
  console.log('üì° –ó–∞–ø—É—Å–∫ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞...');
  
  const webProcess = spawn('yarn', ['web'], {
    stdio: 'pipe',
    shell: true
  });
  
  let serverOutput = '';
  webProcess.stdout.on('data', (data) => {
    serverOutput += data.toString();
  });
  
  webProcess.stderr.on('data', (data) => {
    serverOutput += data.toString();
  });
  
  try {
    // –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
    console.log('‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ (–¥–æ 30 —Å–µ–∫—É–Ω–¥)...');
    const response = await checkServer(3000, 30000);
    
    console.log('‚úÖ –°–µ—Ä–≤–µ—Ä —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!');
    console.log(`üìä –°—Ç–∞—Ç—É—Å: ${response.status}`);
    console.log(`üåê URL: http://localhost:3000`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
    const contentCheck = await new Promise((resolve) => {
      const req = http.get('http://localhost:3000', (res) => {
        let body = '';
        res.on('data', chunk => body += chunk);
        res.on('end', () => resolve(body));
      });
      req.on('error', () => resolve(''));
    });
    
    if (contentCheck.includes('Volstora Base App')) {
      console.log('‚úÖ HTML —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
    } else {
      console.log('‚ö†Ô∏è HTML –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è, –Ω–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–ø–æ–ª–Ω—ã–º');
    }
    
    console.log('\nüéâ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!');
    console.log('üì± –û—Ç–∫—Ä–æ–π—Ç–µ http://localhost:3000 –≤ –±—Ä–∞—É–∑–µ—Ä–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è');
    
  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞:');
    console.log(error.message);
    console.log('\nüìã –í—ã–≤–æ–¥ —Å–µ—Ä–≤–µ—Ä–∞:');
    console.log(serverOutput.slice(-500)); // –ü–æ—Å–ª–µ–¥–Ω–∏–µ 500 —Å–∏–º–≤–æ–ª–æ–≤
    
    console.log('\nüîß –ü–æ–ø—Ä–æ–±—É–π—Ç–µ:');
    console.log('1. yarn install');
    console.log('2. rm -rf node_modules && yarn install');
    console.log('3. yarn add react-dom');
  } finally {
    // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–µ—Ä–≤–µ—Ä
    webProcess.kill('SIGTERM');
    setTimeout(() => webProcess.kill('SIGKILL'), 2000);
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞
testWebServer().catch(console.error);